{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manoj\\\\Desktop\\\\project\\\\EventWeb\\\\webevent\\\\src\\\\components\\\\Imagebox.js\";\nimport React from \"react\";\nimport \"./Imagebox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Imagebox() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"some-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Section Heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        class: \"row\",\n        id: \"idea-one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./assets/p1.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Idea 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here's your descriptive text for your idea to sell people on the thing after the image gets their attention. This type of section looks best when there's enough text to take up most of the height of the adjacent image.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Link to read more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        class: \"row\",\n        id: \"idea-two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Idea 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Alternating images and text works with the natural flow of your user's eyes as they scan the page, allowing their eyes to catch on each of the images in turn. If the user's eyes catch on an image, they'll likely read the accompanying text.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Link to read more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://placekitten.com/g/310/200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        class: \"row\",\n        id: \"idea-three\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://placekitten.com/g/250/200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Idea 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Be careful not to let your text sections become too wordy, however; if you write too much your users may choose not to read the content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Link to read more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Imagebox;\nexport default Imagebox;\nvar _c;\n$RefreshReg$(_c, \"Imagebox\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Imagebox","children","id","fileName","_jsxFileName","lineNumber","columnNumber","class","src","href","_c","$RefreshReg$"],"sources":["C:/Users/Manoj/Desktop/project/EventWeb/webevent/src/components/Imagebox.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Imagebox.css\";\r\n\r\nfunction Imagebox () {\r\n    return(\r\n        <>\r\n        <div id=\"some-box\">\r\n  <h1>Section Heading</h1>\r\n\r\n\t<article class=\"row\" id=\"idea-one\">\r\n\t\t<div><img src=\"./assets/p1.jpg\"/></div>\r\n\t\t<div>\r\n\t\t\t<h3>Idea 1</h3>\r\n\t\t\t<p>Here's your descriptive text for your idea to sell people on the thing after the image gets their attention. This type of section looks best when there's enough text to take up most of the height of the adjacent image.</p>\r\n\t\t\t<a href=\"#\">Link to read more</a>\r\n\t\t</div>\r\n\t</article>\r\n\r\n\t<article class=\"row\" id=\"idea-two\">\r\n\t\t<div>\r\n\t\t\t<h3>Idea 2</h3>\r\n\t\t\t<p>Alternating images and text works with the natural flow of your user's eyes as they scan the page, allowing their eyes to catch on each of the images in turn. If the user's eyes catch on an image, they'll likely read the accompanying text.</p>\r\n\t\t\t<a href=\"#\">Link to read more</a>\r\n\t\t</div>\r\n\t\t<div><img src=\"http://placekitten.com/g/310/200\"/></div>\r\n\t</article>\r\n\r\n\t<article class=\"row\" id=\"idea-three\">\r\n\t\t<div><img src=\"http://placekitten.com/g/250/200\"/></div>\r\n\t\t<div>\r\n\t\t\t<h3>Idea 3</h3>\r\n\t\t\t<p>Be careful not to let your text sections become too wordy, however; if you write too much your users may choose not to read the content.</p>\r\n\t\t\t<a href=\"#\">Link to read more</a>\r\n\t\t</div>\r\n\t</article>\r\n\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Imagebox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}